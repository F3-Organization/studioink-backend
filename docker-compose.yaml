services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - "5432"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./src:/app
    depends_on:
      - db
    restart: on-failure

  rabbitmq:
    image: rabbitmq:4.1.4-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped
    env_file:
      - .env

  redis:
    image: redis:8.2.2-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    env_file:
      - .env

  email_worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: >
      celery -A app.celery_app worker
      --loglevel=info
      --concurrency=4
      -Q emails
      -n invitation_email_worker.%h
    depends_on:
      - rabbitmq
      - redis
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "celery -A app.celery_app status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./src:/app

volumes:
  postgres_data:
